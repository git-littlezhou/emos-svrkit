// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: network_proto.proto

#ifndef PROTOBUF_network_5fproto_2eproto__INCLUDED
#define PROTOBUF_network_5fproto_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3001000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3001000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace emoskit {
namespace protobuf {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_network_5fproto_2eproto();
void protobuf_InitDefaults_network_5fproto_2eproto();
void protobuf_AssignDesc_network_5fproto_2eproto();
void protobuf_ShutdownFile_network_5fproto_2eproto();

class Request;
class Response;

enum ResponseType {
  OK = 0,
  ERROR = 1,
  ResponseType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ResponseType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ResponseType_IsValid(int value);
const ResponseType ResponseType_MIN = OK;
const ResponseType ResponseType_MAX = ERROR;
const int ResponseType_ARRAYSIZE = ResponseType_MAX + 1;

const ::google::protobuf::EnumDescriptor* ResponseType_descriptor();
inline const ::std::string& ResponseType_Name(ResponseType value) {
  return ::google::protobuf::internal::NameOfEnum(
    ResponseType_descriptor(), value);
}
inline bool ResponseType_Parse(
    const ::std::string& name, ResponseType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ResponseType>(
    ResponseType_descriptor(), name, value);
}
// ===================================================================

class Request : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:emoskit.protobuf.Request) */ {
 public:
  Request();
  virtual ~Request();

  Request(const Request& from);

  inline Request& operator=(const Request& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Request& default_instance();

  static const Request* internal_default_instance();

  void Swap(Request* other);

  // implements Message ----------------------------------------------

  inline Request* New() const { return New(NULL); }

  Request* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Request& from);
  void MergeFrom(const Request& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Request* other);
  void UnsafeMergeFrom(const Request& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 method_id = 1;
  void clear_method_id();
  static const int kMethodIdFieldNumber = 1;
  ::google::protobuf::uint32 method_id() const;
  void set_method_id(::google::protobuf::uint32 value);

  // optional bytes contents = 2;
  void clear_contents();
  static const int kContentsFieldNumber = 2;
  const ::std::string& contents() const;
  void set_contents(const ::std::string& value);
  void set_contents(const char* value);
  void set_contents(const void* value, size_t size);
  ::std::string* mutable_contents();
  ::std::string* release_contents();
  void set_allocated_contents(::std::string* contents);

  // @@protoc_insertion_point(class_scope:emoskit.protobuf.Request)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr contents_;
  ::google::protobuf::uint32 method_id_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_network_5fproto_2eproto_impl();
  friend void  protobuf_AddDesc_network_5fproto_2eproto_impl();
  friend void protobuf_AssignDesc_network_5fproto_2eproto();
  friend void protobuf_ShutdownFile_network_5fproto_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<Request> Request_default_instance_;

// -------------------------------------------------------------------

class Response : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:emoskit.protobuf.Response) */ {
 public:
  Response();
  virtual ~Response();

  Response(const Response& from);

  inline Response& operator=(const Response& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Response& default_instance();

  static const Response* internal_default_instance();

  void Swap(Response* other);

  // implements Message ----------------------------------------------

  inline Response* New() const { return New(NULL); }

  Response* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Response& from);
  void MergeFrom(const Response& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Response* other);
  void UnsafeMergeFrom(const Response& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .emoskit.protobuf.ResponseType response_code = 1;
  void clear_response_code();
  static const int kResponseCodeFieldNumber = 1;
  ::emoskit::protobuf::ResponseType response_code() const;
  void set_response_code(::emoskit::protobuf::ResponseType value);

  // optional string info = 2;
  void clear_info();
  static const int kInfoFieldNumber = 2;
  const ::std::string& info() const;
  void set_info(const ::std::string& value);
  void set_info(const char* value);
  void set_info(const char* value, size_t size);
  ::std::string* mutable_info();
  ::std::string* release_info();
  void set_allocated_info(::std::string* info);

  // optional bytes contents = 3;
  void clear_contents();
  static const int kContentsFieldNumber = 3;
  const ::std::string& contents() const;
  void set_contents(const ::std::string& value);
  void set_contents(const char* value);
  void set_contents(const void* value, size_t size);
  ::std::string* mutable_contents();
  ::std::string* release_contents();
  void set_allocated_contents(::std::string* contents);

  // @@protoc_insertion_point(class_scope:emoskit.protobuf.Response)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr info_;
  ::google::protobuf::internal::ArenaStringPtr contents_;
  int response_code_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_network_5fproto_2eproto_impl();
  friend void  protobuf_AddDesc_network_5fproto_2eproto_impl();
  friend void protobuf_AssignDesc_network_5fproto_2eproto();
  friend void protobuf_ShutdownFile_network_5fproto_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<Response> Response_default_instance_;

// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// Request

// optional uint32 method_id = 1;
inline void Request::clear_method_id() {
  method_id_ = 0u;
}
inline ::google::protobuf::uint32 Request::method_id() const {
  // @@protoc_insertion_point(field_get:emoskit.protobuf.Request.method_id)
  return method_id_;
}
inline void Request::set_method_id(::google::protobuf::uint32 value) {
  
  method_id_ = value;
  // @@protoc_insertion_point(field_set:emoskit.protobuf.Request.method_id)
}

// optional bytes contents = 2;
inline void Request::clear_contents() {
  contents_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Request::contents() const {
  // @@protoc_insertion_point(field_get:emoskit.protobuf.Request.contents)
  return contents_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Request::set_contents(const ::std::string& value) {
  
  contents_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:emoskit.protobuf.Request.contents)
}
inline void Request::set_contents(const char* value) {
  
  contents_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:emoskit.protobuf.Request.contents)
}
inline void Request::set_contents(const void* value, size_t size) {
  
  contents_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:emoskit.protobuf.Request.contents)
}
inline ::std::string* Request::mutable_contents() {
  
  // @@protoc_insertion_point(field_mutable:emoskit.protobuf.Request.contents)
  return contents_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Request::release_contents() {
  // @@protoc_insertion_point(field_release:emoskit.protobuf.Request.contents)
  
  return contents_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Request::set_allocated_contents(::std::string* contents) {
  if (contents != NULL) {
    
  } else {
    
  }
  contents_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), contents);
  // @@protoc_insertion_point(field_set_allocated:emoskit.protobuf.Request.contents)
}

inline const Request* Request::internal_default_instance() {
  return &Request_default_instance_.get();
}
// -------------------------------------------------------------------

// Response

// optional .emoskit.protobuf.ResponseType response_code = 1;
inline void Response::clear_response_code() {
  response_code_ = 0;
}
inline ::emoskit::protobuf::ResponseType Response::response_code() const {
  // @@protoc_insertion_point(field_get:emoskit.protobuf.Response.response_code)
  return static_cast< ::emoskit::protobuf::ResponseType >(response_code_);
}
inline void Response::set_response_code(::emoskit::protobuf::ResponseType value) {
  
  response_code_ = value;
  // @@protoc_insertion_point(field_set:emoskit.protobuf.Response.response_code)
}

// optional string info = 2;
inline void Response::clear_info() {
  info_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Response::info() const {
  // @@protoc_insertion_point(field_get:emoskit.protobuf.Response.info)
  return info_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Response::set_info(const ::std::string& value) {
  
  info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:emoskit.protobuf.Response.info)
}
inline void Response::set_info(const char* value) {
  
  info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:emoskit.protobuf.Response.info)
}
inline void Response::set_info(const char* value, size_t size) {
  
  info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:emoskit.protobuf.Response.info)
}
inline ::std::string* Response::mutable_info() {
  
  // @@protoc_insertion_point(field_mutable:emoskit.protobuf.Response.info)
  return info_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Response::release_info() {
  // @@protoc_insertion_point(field_release:emoskit.protobuf.Response.info)
  
  return info_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Response::set_allocated_info(::std::string* info) {
  if (info != NULL) {
    
  } else {
    
  }
  info_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), info);
  // @@protoc_insertion_point(field_set_allocated:emoskit.protobuf.Response.info)
}

// optional bytes contents = 3;
inline void Response::clear_contents() {
  contents_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Response::contents() const {
  // @@protoc_insertion_point(field_get:emoskit.protobuf.Response.contents)
  return contents_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Response::set_contents(const ::std::string& value) {
  
  contents_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:emoskit.protobuf.Response.contents)
}
inline void Response::set_contents(const char* value) {
  
  contents_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:emoskit.protobuf.Response.contents)
}
inline void Response::set_contents(const void* value, size_t size) {
  
  contents_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:emoskit.protobuf.Response.contents)
}
inline ::std::string* Response::mutable_contents() {
  
  // @@protoc_insertion_point(field_mutable:emoskit.protobuf.Response.contents)
  return contents_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Response::release_contents() {
  // @@protoc_insertion_point(field_release:emoskit.protobuf.Response.contents)
  
  return contents_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Response::set_allocated_contents(::std::string* contents) {
  if (contents != NULL) {
    
  } else {
    
  }
  contents_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), contents);
  // @@protoc_insertion_point(field_set_allocated:emoskit.protobuf.Response.contents)
}

inline const Response* Response::internal_default_instance() {
  return &Response_default_instance_.get();
}
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace protobuf
}  // namespace emoskit

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::emoskit::protobuf::ResponseType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::emoskit::protobuf::ResponseType>() {
  return ::emoskit::protobuf::ResponseType_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_network_5fproto_2eproto__INCLUDED
